services:
  producer:
    build: ./producer
    env_file: ./producer/.env.producer
    environment:
      - RABBITMQ_PASS
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      initialize-queue:
        condition: service_completed_successfully
    volumes: 
      - volume:/usr/local/lib/python3.8/site-packages
    container_name: producer

  consumer:
    build: ./consumer
    environment: 
      - PYTHONUNBUFFERED=1
      - RABBITMQ_USER=rabbitmq
      - RABBITMQ_PASS
      - RABBITMQ_PORT=5672
      - TASK_QUEUE=task_queue
    volumes: 
      - /usr/local/lib/python3.8/site-packages
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      producer:
        condition: service_started
  initialize-queue:
    build: ./job
    restart: never
    environment:
      - RABBITMQ_PASS
      - TASK_QUEUE=task_queue
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file: ./job/.env.job 
    volumes: 
      - volume:/usr/local/lib/python3/site-packages
  api:
    build: ./api
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f localhost:5000"]
      interval: 45s
      timeout: 5m
      retries: 5
      start_period: 30s
  nginx:
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/tmp/nginx.conf
    command: /bin/bash -c "envsubst < /tmp/nginx.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    environment:
      - FLASK_SERVER_ADDR=api:5000
    ports:
      - 80:80
    depends_on:
      api:
        condition: service_started
    container_name: web-svc
    healthcheck:
      test: service nginx status || exit 1
      interval: 45s
      timeout: 5m
      retries: 5
      start_period: 30s
  rabbitmq:
    image: rabbitmq:3.8-management
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
    volumes:
      - /var/log/rabbitmq/
      - volume:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 45s
      timeout: 5m
      retries: 5
      start_period: 30s
  mongodb:
    image: mongo:latest
    volumes:
      - volume:/data/db
    healthcheck:
      test:
      - CMD
      - mongo
      - --eval
      - "db.adminCommand('ping')"
      interval: 30s
      timeout: 2m
      retries: 2
      start_period: 10s
volumes:
  volume:
    driver_opts:
      size: 0.5Gi
